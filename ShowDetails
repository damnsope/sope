Private Sub UserForm_Activate()
    'HookFormScroll Me
    toFind = LCase(Environ("username"))
    dbPath = Sheets(1).Range("A3").Value
    filePath = Sheets(1).Range("A4").Value

    Me.ScrollTop = 0
    caseID = ShowAll.TBcaseID.Value
    strSQL = "SELECT * FROM IC_Tagging WHERE [CaseID]='" & caseID & "'"
    
    Set cnn = New ADODB.Connection ' Initialise the collection class variable
    Set rs = New ADODB.Recordset 'assign memory to the recordset
    cnn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & dbPath & ";Jet OLEDB:Database Password=dbs2018;"
    rs.Open strSQL, cnn, adOpenDynamic, adLockOptimistic, adCmdText
    
    With rs
'=========================================================================================================
        'Edit form interface based on action
        ShowDetails.Caption = "IC Tagging - Check current status"
        ShowDetails.height = 495
        LBaum1.Visible = False
        TBaum2.Visible = False
        L1.Visible = False
        L2.Visible = False
        btnRetag.Visible = False
        btnUntag.Visible = False
        LBstartReTag.Visible = False
        CBstartReTag.Visible = False
        LBnewIC.Visible = False
        TBnewIC.Visible = False
        
        'If checking only do nth, but...
        If action = "retag" Then
            ShowDetails.Caption = "IC Tagging - Retagging"
            ShowDetails.ScrollBars = fmScrollBarsVertical
            ShowDetails.ScrollHeight = 580
            L1.Visible = True
            L2.Visible = True
            LBstartReTag.Visible = True
            CBstartReTag.Visible = True
            LBnewIC.Visible = True
            TBnewIC.Visible = True
            btnRetag.Visible = True
            
        ElseIf action = "untag" Then
            ShowDetails.Caption = "IC Tagging - Untagging"
            ShowDetails.ScrollBars = fmScrollBarsVertical
            ShowDetails.ScrollHeight = 565
            L1.Visible = True
            L2.Visible = True
            LBstartReTag.Visible = True
            LBstartReTag.Caption = "Effective Untag Month:"
            CBstartReTag.Visible = True
            btnUntag.Visible = True
            LBlessSix.Caption = "Reason for untagging when tagging <6 months:"
            
        End If
'=========================================================================================================
        'Populate case's details into form
        TBcaseID.Caption = .Fields("CaseID").Value
        TBstatus.Caption = .Fields("CaseStatus").Value
        TBrm.Value = .Fields("RM").Value
        TBrmTL.Value = .Fields("RM TL").Value
        
        TBicType.Value = .Fields("ICType").Value
        TBic.Value = .Fields("IC").Value
        TBicTL.Value = .Fields("IC TL").Value

        CBsegment.Value = .Fields("Segment").Value
        TBHHID.Value = .Fields("CollectionID").Value
        TBHHName.Value = .Fields("HouseholdName").Value
        TBsAcc.Value = .Fields("SAccount").Value
        TBname.Value = .Fields("ClientName").Value
        TBnw.Value = .Fields("NetWorth").Value
        TBaum.Value = .Fields("AUM").Value
        
        If Not IsNull(.Fields("JustificationForAUM").Value) Then
            LBaum1.Visible = True
            TBaum2.Visible = True
            TBaum2.Value = .Fields("JustificationForAUM").Value
        End If
            
        TBopening.Value = Format(.Fields("AccOpenDate").Value, "mmm-yy")
        noYears = DateDiff("yyyy", .Fields("AccOpenDate").Value, Date)
        If noYears = 0 Then
            noYears = DateDiff("m", .Fields("AccOpenDate").Value, Date)
            TBlength.Value = noYears & " months"
        Else
            TBlength.Value = noYears & " years"
        End If

        CBriskPF.Value = .Fields("RiskPortfolio").Value
        TBinvexp.Value = .Fields("InvestmentExperience").Value
        CBstartTag.Value = Format(.Fields("TaggedMonth").Value, "mmm-yy")
        TBremarks.Value = .Fields("Remarks").Value
'=========================================================================================================
        ' Show ticks only for check status
        If action = "check" Then
            If .Fields("CaseStatus").Value = "Pending RM TL" Then
                TBrm.Value = TBrm.Value & " " & ChrW(&H2705)
                
            ElseIf .Fields("CaseStatus").Value = "Pending IC" Then
                TBrm.Value = TBrm.Value & " " & ChrW(&H2705)
                TBrmTL.Value = TBrmTL.Value & " " & ChrW(&H2705)
                
            ElseIf .Fields("CaseStatus").Value = "Pending IC TL" Then
                TBrm.Value = TBrm.Value & " " & ChrW(&H2705)
                TBrmTL.Value = TBrmTL.Value & " " & ChrW(&H2705)
                TBic.Value = TBic.Value & " " & ChrW(&H2705)
    
            ElseIf .Fields("CaseStatus").Value = "Approved" Then
                TBrm.Value = TBrm.Value & " " & ChrW(&H2705)
                TBrmTL.Value = TBrmTL.Value & " " & ChrW(&H2705)
                TBic.Value = TBic.Value & " " & ChrW(&H2705)
                TBicTL.Value = TBicTL.Value & " " & ChrW(&H2705)
            End If
        End If
    End With
    
    For i = 0 To 7
        CBstartReTag.AddItem Format(DateAdd("m", i, Date), "mmm-yy")
    Next i
    
    
End Sub
Private Sub btnRetag_Click()
    Application.ScreenUpdating = False
    'Retag = get all approvals first. Once the new tagging is approved, then retag

    Dim cnn As ADODB.Connection, rs As ADODB.Recordset, strSQL As String
    Dim oldCID, arm, rm, rmTL, oldic, ic, icTL, _
        hhid, hhName, sAcc, name, segment, _
        nw, aum, just, opening, riskPF, _
        invexp, startTag, revBackdate, remarks As String
    Dim rank, rejector, appType, icType, submitDate, appRejDate, nextToApprove, msg, msgHTML As String
    
    caseID = ShowAll.TBcaseID.Value
    
    'Determine untagger and RM/ARM
    rank = RMoptBtn
    rejector = toFind
    
    'Validation
    If CBstartReTag.Value = "" Then
        MsgBox "Please input the effective tagging month.", vbInformation, "DBS Bank - Live more, Bank less"
        Exit Sub
    End If
    
    If TBnewIC.Value = "" Then
        MsgBox "Please input the new IC's 1Bank.", vbInformation, "DBS Bank - Live more, Bank less"
        Exit Sub
    End If
    If TBnewICTL.Value = "" Then
        MsgBox "Please input the new IC TL's 1Bank.", vbInformation, "DBS Bank - Live more, Bank less"
        Exit Sub
    End If
    If TBlessSix.Visible = True Then
        If TBlessSix.Value = "" Then
            MsgBox "Please input the reason for retagging.", vbInformation, "DBS Bank - Live more, Bank less"
            Exit Sub
        End If
    End If
    
    
    'Read and load the original tagging date, and effective retagging date
    xYear = CInt(Split(CBstartTag.Value, "-")(1))
    xMonth = month("01/" & Format(Split(CBstartTag.Value, "-")(0), "mmmm"))
    startTag = DateSerial(xYear, xMonth, 1)
    yYear = CInt(Split(CBstartReTag.Value, "-")(1))
    yMonth = month("01/" & Format(Split(CBstartReTag.Value, "-")(0), "mmmm"))
    startretag = DateSerial(yYear, yMonth, 1)
    
    If startretag <= startTag Then
        MsgBox "Please check that the effective retagging month is later than the original effective tagging month.", vbInformation, "DBS Bank - Live more, Bank less"
        Exit Sub
    End If

    ans = MsgBox("Please check that the retagged IC has the same role as the current IC." & vbNewLine & _
    vbNewLine & _
    "This action cannot be undone. Continue?", vbYesNo, "DBS Bank - Live more, Bank less")
    If ans = vbNo Then
        Exit Sub
    End If
    
'==========================================================================================================
    'Get current tagging's details
    'Validation is included when caseID is pulled
    strSQL = "SELECT * FROM IC_Tagging WHERE [CaseID]='" & caseID & "'"
    Set cnn = New ADODB.Connection ' Initialise the collection class variable
    Set rs = New ADODB.Recordset 'assign memory to the recordset
    cnn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & dbPath & ";Jet OLEDB:Database Password=dbs2018;"
    rs.Open strSQL, cnn, adOpenDynamic, adLockOptimistic, adCmdText
    
    With rs
         'Pull all values, store in variables
         oldCID = .Fields("CaseID").Value
        icType = .Fields("ICType").Value
        arm = IIf(IsNull(.Fields("ARM").Value), "", .Fields("ARM").Value)
        rm = .Fields("RM").Value
        rmTL = .Fields("RM TL").Value
        oldic = .Fields("IC").Value
        ic = TBnewIC.Value
        If ic = oldic Then
            MsgBox "You are retagging the same IC. Please check again.", vbInformation, "DBS Bank - Live more, Bank less"
            Exit Sub
        End If
        icTL = TBnewICTL.Value
        segment = .Fields("Segment").Value
        hhid = .Fields("CollectionID").Value
        hhName = IIf(IsNull(.Fields("HouseholdName").Value), "", .Fields("HouseholdName").Value)
        name = IIf(IsNull(.Fields("ClientName").Value), "", .Fields("ClientName").Value)
        sAcc = IIf(IsNull(.Fields("SAccount").Value), "", .Fields("SAccount").Value)
        nw = .Fields("NetWorth").Value
        aum = .Fields("AUM").Value
        just = IIf(IsNull(.Fields("JustificationForAUM").Value), "", .Fields("JustificationForAUM").Value)
        opening = .Fields("AccOpenDate").Value
        riskPF = .Fields("RiskPortfolio").Value
        invexp = IIf(IsNull(.Fields("InvestmentExperience").Value), "", .Fields("InvestmentExperience").Value)
        remarks = IIf(IsNull(.Fields("Remarks").Value), "", .Fields("Remarks").Value)
        
        If IsNull(.Fields("IPOTaggedMonth").Value) Then
            ipo = False
        Else
            ipo = True
        End If
        
        .Fields("CaseStatus").Value = "Pending retagging"
        .Fields("ApprovalRejectDate").Value = Evaluate("=NOW()")
        .Update
    End With
    '===============================================================================
    'IPO Validation
    If icType = "IC FX" Then
    Else
        strSQL = "SELECT * FROM IC_Tagging WHERE [CollectionID] = '" & hhid & "'"
        Set cnn = New ADODB.Connection ' Initialise the collection class variable
        Set rs = New ADODB.Recordset 'assign memory to the recordset
        cnn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & dbPath & ";Jet OLEDB:Database Password=dbs2018;"
        rs.Open strSQL, cnn, adOpenDynamic, adLockOptimistic, adCmdText
        
        '1) Check if IC type currently tagged
        'curerntly ic eq but says to ic all which is wrong
        With rs
            If Not (rs.EOF And rs.BOF) Then
                .MoveFirst
                Do Until rs.EOF = True
                    If Date >= .Fields("TaggedMonth").Value And (Date < .Fields("UntaggedMonth").Value Or IsNull(.Fields("UntaggedMonth").Value)) And _
                                    .Fields("ICType").Value <> icType And _
                                    .Fields("ICType").Value <> "IC FX" Then
                        ans = MsgBox("IPO Revenue is currently allocated to the " & .Fields("ICType").Value & "." & vbNewLine & vbNewLine & _
                                    "Please select: " & vbNewLine & "1) 'Yes' to continue" & vbNewLine & "2) 'No' to allocate IPO Revenue to the " & icType, vbYesNo, "DBS Bank - Live more, Bank less")
                    
                         If ans = vbNo Then
                            .Fields("IPOTaggedMonth").Value = startretag
                        End If
                    End If
                    .MoveNext
                Loop
            End If
        End With
    End If
    
'==========================================================================================================
    'New tag
    strSQL = "SELECT * FROM IC_Tagging"
    Set cnn = New ADODB.Connection ' Initialise the collection class variable
    Set rs = New ADODB.Recordset 'assign memory to the recordset
    cnn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & dbPath & ";Jet OLEDB:Database Password=dbs2018;"
    rs.Open strSQL, cnn, adOpenDynamic, adLockOptimistic, adCmdText
    
    On Error GoTo errH
    With rs
        'Create new tagging with values stored in variables
        .AddNew
        .Fields("CaseID").Value = hhid & "_" & ic & "_" & Format(startTag, "mmm-yy")
        .Fields("ICType").Value = icType
        .Fields("ApplicationType").Value = "Retagging"
        .Fields("FirstSubmitDate").Value = Evaluate("=NOW()")
        
        .Fields("ARM").Value = arm
        .Fields("RM").Value = rm
        .Fields("RM TL").Value = rmTL
        .Fields("IC").Value = ic
        .Fields("IC TL").Value = icTL
        
        'Next person to approve
        If RMoptBtn = "ARM" Then
            'RM
            .Fields("CaseStatus").Value = "Pending RM"
            nextToApprove = rm
        ElseIf RMoptBtn = "RM" Then
            'RM TL
            .Fields("CaseStatus").Value = "Pending RM TL"
            nextToApprove = rmTL
        End If
        
        .Fields("Segment").Value = segment
        .Fields("CollectionID").Value = hhid
        .Fields("HouseholdName").Value = hhName
        .Fields("SAccount").Value = sAcc
        .Fields("ClientName").Value = name
        .Fields("NetWorth").Value = nw
        .Fields("AUM").Value = aum
        .Fields("JustificationForAUM").Value = just
        .Fields("AccOpenDate").Value = opening
        .Fields("RiskPortfolio").Value = riskPF
        .Fields("InvestmentExperience").Value = invexp
        .Fields("TaggedMonth").Value = startretag
        .Fields("Remarks").Value = remarks
        .Fields("ForRetagging").Value = oldCID
        If ipo = True Then
            .Fields("IPOTaggedMonth").Value = startretag
        End If
        .Update
        
        ' Send Email
        Set aOutlook = CreateObject("Outlook.Application")
        Set aEmail = aOutlook.CreateItem(0)
        aEmail.Subject = "[PENDING] IC Retagging Request"
        aEmail.To = nextToApprove & "@dbs.com"
        aEmail.htmlBody = "Hello " & nextToApprove & "," & "<br>" & _
        "<br>" & _
        "<table border=""1"" cellpadding=""1"" cellspacing=""1"" style=""width: 500px;"">" & _
        "<tbody><tr><td>Collection ID</td>" & _
                "<td>RM 1Bank</td>" & _
                "<td>IC 1Bank</td>" & _
                "<td>Tag Start Date</td></tr>" & _
            "<tr><td><font color=red>" & .Fields("CollectionID").Value & "</font></td>" & _
                "<td><font color=red>" & .Fields("RM").Value & "</font></td>" & _
                "<td><font color=red>" & .Fields("IC").Value & "</font></td>" & _
                "<td><font color=red>" & Format(startTag, "mmm-yy") & "</font></td></tr></tbody>" & _
                "</table>" & "<br>" & _
        "You can approve it in the file here: " & "<br>" & _
        "<a href=""file://" & filePath & """>Click on me</a>" & "<br>" & _
        "<br>" & _
        " - Admin" & "<br>" & _
        "This is a computer generated email, please do not reply to this email."
        aEmail.display
        
        
    MsgBox "You have submitted a request to retag Collection ID: " & .Fields("CollectionID").Value & vbNewLine & _
    vbNewLine & _
    "Current IC: " & oldic & vbNewLine & _
    "New IC: " & ic & vbNewLine & _
    vbNewLine & _
    "An email has been sent to the next person for approval.", vbInformation, "DBS Bank - Live more, Bank less"
    
    End With
    
    Unload Me
    Call UpdatePending
    Exit Sub
    
errH:
    MsgBox "Unexpected Error occured." & vbNewLine & vbNewLine & _
    "Perhaps you have already submitted this request." & vbNewLine & _
    "Please check if it already exists. If it doesn't, please contact the AICs for help.", vbInformation, "DBS Bank - Live more, Bank less"
    Unload Me
    Exit Sub
End Sub
Public Sub btnUntag_Click()
    'Untagging = notify IC only. IC has no say
    
    Dim aOutlook, aEmail As Object, email As String
    Dim hhid, ic As String, findC As Range
    
    'Read effective UNTAG month
    If CBstartReTag.Value = "" Then
        MsgBox "Please input the effective untagging month.", vbInformation, "DBS Bank - Live more, Bank less"
        Exit Sub
    End If
    
    
    
    iYear = CInt(Split(CBstartTag.Value, "-")(1))
    iMonth = month("01/" & Format(Split(CBstartTag.Value, "-")(0), "mmmm"))
    startTag = DateSerial(iYear, iMonth, 1)
    
    iYear = CInt(Split(CBstartReTag.Value, "-")(1))
    iMonth = month("01/" & Format(Split(CBstartReTag.Value, "-")(0), "mmmm"))
    untag = DateSerial(iYear, iMonth, 1)
    
    If untag < startTag Then
        MsgBox "Please select a valid untagging month.", vbInformation, "DBS Bank - Live more, Bank less"
        Exit Sub
    End If
    
    If action = "retag" Then
        'In a retagging case, untag the original case
        caseID = cid
    Else
        caseID = ShowAll.TBcaseID.Value
        If TBlessSix.Visible = True Then
            If TBlessSix.Value = "" Then
                MsgBox "Please input the reason for retagging.", vbInformation, "DBS Bank - Live more, Bank less"
                Exit Sub
            End If
        End If
        ans = MsgBox("This action cannot be undone. Continue?", vbYesNo, "DBS Bank - Live more, Bank less")
        If ans = vbNo Then
            Exit Sub
        End If
    End If
    '===============================================================
    strSQL = "SELECT * FROM IC_Tagging WHERE [CaseID]='" & caseID & "'"
    Set cnn = New ADODB.Connection ' Initialise the collection class variable
    Set rs = New ADODB.Recordset 'assign memory to the recordset
    cnn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & dbPath & ";Jet OLEDB:Database Password=dbs2018;"
    rs.Open strSQL, cnn, adOpenDynamic, adLockOptimistic, adCmdText
    
    With rs
        .Fields("CaseStatus").Value = "Untagged"
        .Fields("ApprovalRejectDate").Value = Evaluate("=NOW()")
               
        'cid = an old form, need to untag now bc a retagging is approved
        If cid <> "" Then
            .Fields("UntaggedMonth").Value = endTag
            If Not IsNull(.Fields("IPOTaggedMonth")) Then
                .Fields("IPOUntaggedMonth").Value = endTag
            End If
            
            If DateDiff("m", .Fields("TaggedMonth").Value, .Fields("UntaggedMonth").Value) < 6 Then
                .Fields("TaggedLessThan6Months").Value = Evaluate("RIGHT(" & .Fields("ForRetagging").Value & ", Len(" & .Fields("ForRetagging").Value & ") - find("" ""," & .Fields("ForRetagging").Value) & ")" & ")"
            End If
            
        'if just a normal untagging
        Else
                .Fields("UntaggedMonth").Value = untag
                If Not IsNull(.Fields("IPOTaggedMonth")) Then
                    .Fields("IPOUntaggedMonth").Value = untag
                End If
                
                If DateDiff("m", .Fields("TaggedMonth").Value, .Fields("UntaggedMonth").Value) < 6 Then
                    .Fields("TaggedLessThan6Months").Value = TBlessSix.Value
                End If
        End If

        .Update
        '===============================================
        ' Send Email
        Set aOutlook = CreateObject("Outlook.Application")
        Set aEmail = aOutlook.CreateItem(0)
        aEmail.To = .Fields("IC").Value & "@dbs.com"
        If aEmail.To = "@dbs.com" Then
             aEmail.To = Sheets("AIC").Range("B2").Value
        End If
        aEmail.CC = Sheets("AIC").Range("B2").Value & "; " & _
                    Sheets("AIC").Range("C2").Value & "; " & _
                    Sheets("AIC").Range("D2").Value & "; " & _
                    Sheets("AIC").Range("E2").Value
         aEmail.Subject = "[NOTICE] IC Untagging"
        aEmail.htmlBody = "Hello all," & "<br>" & _
        "<br>" & _
        "<table border=""1"" cellpadding=""1"" cellspacing=""1"" style=""width: 600px;"">" & _
        "<tbody><tr><td>Case ID</td>" & _
                "<td>Collection ID</td>" & _
                "<td>RM 1Bank</td>" & _
                "<td>IC 1Bank</td>" & _
                "<td>Tag Start Date</td>" & _
                "<td>Tag End Date</td></tr>" & _
            "<tr><td><font color=red>" & caseID & "</font></td>" & _
                "<td><font color=red>" & .Fields("CollectionID").Value & "</font></td>" & _
                "<td><font color=red>" & .Fields("RM").Value & "</font></td>" & _
                "<td><font color=red>" & .Fields("IC").Value & "</font></td>" & _
                "<td><font color=red>" & Format(.Fields("TaggedMonth").Value, "mmm-yy") & "</font></td>" & _
                "<td><font color=red>" & Format(.Fields("UntaggedMonth").Value, "mmm-yy") & "</font></td></tr></tbody>" & _
                "</table>" & "<br>" & _
        " - Admin" & "<br>" & _
        "This is a computer generated email, please do not reply to this email."
        aEmail.display
           
   
        If action = "retag" Then
        Else
            MsgBox "You have untagged " & .Fields("IC").Value & " from Collection ID: " & .Fields("CollectionID").Value & vbNewLine & _
            vbNewLine & _
            "An email has been sent to notify the IC and AICs."
        End If

    End With

    Unload Me
    Exit Sub
    
emptyField:
    MsgBox "No record of this tagging was found. Please contact the AICs for help.", vbInformation, "DBS Bank - Live more, Bank less"
    Unload Me
    Exit Sub
End Sub

Private Sub CBstartRetag_Change()
    iYear = CInt(Split(CBstartTag.Value, "-")(1))
    iMonth = month("01/" & Format(Split(CBstartTag.Value, "-")(0), "mmmm"))
    startTag = DateSerial(iYear, iMonth, 1)
    
    iYear = CInt(Split(CBstartReTag.Value, "-")(1))
    iMonth = month("01/" & Format(Split(CBstartReTag.Value, "-")(0), "mmmm"))
    endTag = DateSerial(iYear, iMonth, 1)
    
    If DateDiff("m", startTag, endTag) < 6 Then
        LBlessSix.Visible = True
        TBlessSix.Visible = True
        LBnewIC.Top = 528
        TBnewIC.Top = 528
        btnUntag.Top = 528
    Else
        LBlessSix.Visible = False
        TBlessSix.Visible = False
        btnUntag.Top = 504
    End If
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    'UnhookFormScroll
End Sub
